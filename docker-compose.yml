version: '2.1'
services:
  node-redis-04:
    build:
      context: .
      dockerfile: Dockerfile
    links: 
      - mongo
      - redis-01
      - redis-02
      - redis-03
      - sentinel-01
      - sentinel-02
      - sentinel-03
    ports:
      - "4004:3000"
    environment:
      - PORT=3000
      - MONGO_URL=mongodb://mongo:27017/db
      - REDIS_SENTINELS=sentinel-01:6379,sentinel-02:6379,sentinel-03:6379,
      - REDIS_NAME=redis-cluster
    depends_on:
      mongo:
        condition: service_healthy
      redis-01:
        condition: service_healthy
      redis-02:
        condition: service_healthy
      redis-03:
        condition: service_healthy
      sentinel-01:
        condition: service_healthy
      sentinel-02:
        condition: service_healthy
      sentinel-03:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget http://localhost:3000/status -O /dev/null || exit 1" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.20
  node-redis-03:
    build:
      context: .
      dockerfile: Dockerfile
    links: 
      - mongo
      - redis-01
      - redis-02
      - redis-03
      - sentinel-01
      - sentinel-02
      - sentinel-03
    ports:
      - "4003:3000"
    environment:
      - PORT=3000
      - MONGO_URL=mongodb://mongo:27017/db
      - REDIS_SENTINELS=sentinel-01:6379,sentinel-02:6379,sentinel-03:6379,
      - REDIS_NAME=redis-cluster
    depends_on:
      mongo:
        condition: service_healthy
      redis-01:
        condition: service_healthy
      redis-02:
        condition: service_healthy
      redis-03:
        condition: service_healthy
      sentinel-01:
        condition: service_healthy
      sentinel-02:
        condition: service_healthy
      sentinel-03:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget http://localhost:3000/status -O /dev/null || exit 1" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.19
  node-redis-02:
    build:
      context: .
      dockerfile: Dockerfile
    links: 
      - mongo
      - redis-01
      - redis-02
      - redis-03
      - sentinel-01
      - sentinel-02
      - sentinel-03
    ports:
      - "4002:3000"
    environment:
      - PORT=3000
      - MONGO_URL=mongodb://mongo:27017/db
      - REDIS_SENTINELS=sentinel-01:6379,sentinel-02:6379,sentinel-03:6379,
      - REDIS_NAME=redis-cluster
    depends_on:
      mongo:
        condition: service_healthy
      redis-01:
        condition: service_healthy
      redis-02:
        condition: service_healthy
      redis-03:
        condition: service_healthy
      sentinel-01:
        condition: service_healthy
      sentinel-02:
        condition: service_healthy
      sentinel-03:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget http://localhost:3000/status -O /dev/null || exit 1" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.18
  node-redis-01:
    build:
      context: .
      dockerfile: Dockerfile
    links: 
      - mongo
      - redis-01
      - redis-02
      - redis-03
      - sentinel-01
      - sentinel-02
      - sentinel-03
    ports:
      - "4001:3000"
    environment:
      - PORT=3000
      - MONGO_URL=mongodb://mongo:27017/db
      - REDIS_SENTINELS=sentinel-01:6379,sentinel-02:6379,sentinel-03:6379,
      - REDIS_NAME=redis-cluster
    depends_on:
      mongo:
        condition: service_healthy
      redis-01:
        condition: service_healthy
      redis-02:
        condition: service_healthy
      redis-03:
        condition: service_healthy
      sentinel-01:
        condition: service_healthy
      sentinel-02:
        condition: service_healthy
      sentinel-03:
        condition: service_healthy
    healthcheck:
      test: [ "CMD-SHELL", "wget http://localhost:3000/status -O /dev/null || exit 1" ]
      interval: 1s
      timeout: 5s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.17
  mongo:
    image: "healthcheck/mongo"
    mem_limit: 1024m
    healthcheck:
      interval: 1s
      retries: 10
    logging:
      driver: none
    networks:
      vpcbr:
        ipv4_address: 10.5.0.16
  redis-01:
    image: "healthcheck/redis"
    mem_limit: 1024m
    volumes:
      - ./node-01/redis.conf:/redis.conf
    command: redis-server /redis.conf
    healthcheck:
      interval: 1s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.15
  redis-02:
    image: "healthcheck/redis"
    mem_limit: 1024m
    volumes:
      - ./node-02/redis.conf:/redis.conf
    command: redis-server /redis.conf
    healthcheck:
      interval: 1s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.14
  redis-03:
    image: "healthcheck/redis"
    mem_limit: 1024m
    volumes:
      - ./node-03/redis.conf:/redis.conf
    command: redis-server /redis.conf
    healthcheck:
      interval: 1s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.13
  sentinel-01:
    image: "healthcheck/redis"
    mem_limit: 1024m
    volumes:
      - ./node-01/sentinel.conf:/sentinel.conf
    command: redis-server /sentinel.conf --sentinel
    healthcheck:
      interval: 1s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.12
  sentinel-02:
    image: "healthcheck/redis"
    mem_limit: 1024m
    volumes:
      - ./node-02/sentinel.conf:/sentinel.conf
    command: redis-server /sentinel.conf --sentinel
    healthcheck:
      interval: 1s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.11
  sentinel-03:
    image: "healthcheck/redis"
    mem_limit: 1024m
    volumes:
      - ./node-03/sentinel.conf:/sentinel.conf
    command: redis-server /sentinel.conf --sentinel
    healthcheck:
      interval: 1s
      retries: 10
    networks:
      vpcbr:
        ipv4_address: 10.5.0.10
networks:
  vpcbr:
    driver: bridge
    ipam:
     config:
       - subnet: 10.5.0.0/16
         gateway: 10.5.0.1